# This is a basic ProFTPD configuration file (rename it to
# 'proftpd.conf' for actual use.  It establishes a single server
# and a single anonymous login.  It assumes that you have a user/group
# "nobody" and "ftp" for normal operation and anon.

# Custome
ServerName                      "c4lab-galaxy"
SQLConnectInfo                  galaxy@postgres:5432 galaxy c4labdatabase
MasqueradeAddress               192.168.208.203
PassivePorts                    21000 21009


# To cause every FTP user to be "jailed" (chrooted) into their home
# directory, uncomment this line.
DefaultRoot                     ~

# Automatically create home directory if it doesn't exist
CreateHome                      on 755 dirmode 755

# Allow users to resume interrupted uploads
AllowStoreRestart               on

# A basic anonymous configuration, no upload directories.  If you do not
# want anonymous users, simply delete this entire <Anonymous> section.

# Common SQL authentication options
SQLEngine                       on
SQLPasswordEngine               on
SQLBackend                      postgres
SQLAuthenticate                 users
# Configuration that handles PBKDF2 encryption
# Set up mod_sql to authenticate against the Galaxy database
# https://github.com/galaxyproject/galaxy/commit/eeaf748c8c46890ef057aedbc212721e710d0f2d
SQLAuthTypes                    PBKDF2
SQLPasswordPBKDF2               SHA256 100000 24
SQLPasswordEncoding             base64

# For PBKDF2 authentication
# See http://dev.list.galaxyproject.org/ProFTPD-integration-with-Galaxy-td4660295.html
SQLPasswordUserSalt             sql:/GetUserSalt

# Define a custom query for lookup that returns a passwd-like entry. Replace 512s with the UID and GID of the user running the Galaxy server
SQLUserInfo                     custom:/LookupGalaxyUser
SQLNamedQuery                   LookupGalaxyUser SELECT "email, (CASE WHEN substring(password from 1 for 6) = 'PBKDF2' THEN substring(password from 39 for 69) ELSE password END) AS password2,512,512,'/ftp/%U','/bin/sh' FROM galaxy_user WHERE email='%U'"

# Define custom query to fetch the password salt
SQLNamedQuery                   GetUserSalt SELECT "(CASE WHEN SUBSTRING (password from 1 for 6) = 'PBKDF2' THEN SUBSTRING (password from 22 for 16) END) AS salt FROM galaxy_user WHERE email='%U'"

# bugs?
WtmpLog                         off

# Disable passive mode
<Limit EPSV PASV>
    DenyAll
</Limit>

# Cusome Done


ServerType                      standalone
DefaultServer                   on

# Port 21 is the standard FTP port.
Port                            21

# Don't use IPv6 support by default.
UseIPv6                         off

# Umask 022 is a good standard umask to prevent new dirs and files
# from being group and world writable.
Umask                           022

# To prevent DoS attacks, set the maximum number of child processes
# to 30.  If you need to allow more than 30 concurrent connections
# at once, simply increase this value.  Note that this ONLY works
# in standalone mode, in inetd mode you should use an inetd server
# that allows you to limit maximum number of processes per service
# (such as xinetd).
MaxInstances                    30

# Set the user and group under which the server will run.
User                            nobody
Group                           nogroup

# Normally, we want files to be overwriteable.
AllowOverwrite                  on

# Bar use of RETR (download) since this is not a public file drop
<Limit RETR>
    DenyAll
</Limit>

# Do not authenticate against real (system) users
<IfModule mod_auth_pam.c>
AuthPAM                         off
</IfModule>

# ssl
<IfModule mod_tls.c>
    TLSEngine                   on
    TLSLog                      /var/log/proftpd_tls.log
    # Make sure that users know that you have to support TLS 1.2! This is very restrictive, but likely the best
    TLSProtocol                 TLSv1.2
    TLSRSACertificateFile       /certs/fullchain.pem
    TLSRSACertificateKeyFile    /certs/privkey.pem
    TLSCertificateChainFile     /certs/fullchain.pem
    TLSRenegotiate              none
    TLSCipherSuite              ALL:!SSLv2:!SSLv3
    TLSVerifyClient             off
    TLSRequired                 auth+data
    TLSOptions                  NoSessionReuseRequired
</IfModule>
